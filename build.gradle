plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.javamodularity.moduleplugin' version '1.8.10'
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'signing'
    id 'jacoco'
    id "io.snyk.gradle.plugin.snykplugin" version "0.4"
}

group 'xyz.ronella.logging'
version '1.2.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

snyk {
    arguments = '--all-sub-projects'
    severity = 'low'
    api = "${snykToken}"
    autoDownload = true
    autoUpdate = true
}

repositories {
    if (Boolean.valueOf(USE_PRIVATE_REPO)) {
        println "Using Private Repository"

        maven {
            url 'https://repo.ronella.xyz/artifactory/java-central'
            credentials {
                username "${artifactoryUsername}"
                password "${artifactoryPassword}"
            }
            mavenContent {
                releasesOnly()
            }
        }
        maven {
            url 'https://repo.ronella.xyz/artifactory/mvn-snapshots'
            credentials {
                username "${artifactoryUsername}"
                password "${artifactoryPassword}"
            }
            mavenContent {
                snapshotsOnly()
            }
        }
    }
    else {
        println "Using mavenCentral Repository"
        mavenCentral()
    }
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn: [testClasses]) {
    archiveClassifier.set('tests')
    from sourceSets.test.output
}

jar.finalizedBy(javadocJar, sourcesJar, testsJar)

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        repositories.maven {
            def publishingPath = version.toString().contains("SNAPSHOT") ? 'mvn-snapshots' : 'mvn-releases'
            url "https://repo.ronella.xyz/artifactory/${publishingPath}/"
            credentials {
                username "${artifactoryUsername}"
                password "${artifactoryPassword}"
            }
        }
        mavenJava(MavenPublication) {
            from components.java
            artifact testsJar
            pom {
                name = 'Logger Plus'
                description = 'Additional functionality to logging.'
                url = 'https://github.com/rcw3bb/logger-plus'
                properties = [
                        "inceptionYear": '2019'
                ]
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/rcw3bb/logger-plus/blob/master/LICENSE.md'
                    }
                }
                developers {
                    developer {
                        id = 'rcw3bb'
                        name = 'Ronaldo Webb'
                        email = 'ronaldo.c.webb@gmail.com'
                    }
                }
                scm {
                    connection = 'https://github.com/rcw3bb/logger-plus.git'
                    developerConnection = 'https://github.com/rcw3bb/logger-plus.git'
                    url = 'https://github.com/rcw3bb/logger-plus'
                }
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
    finalizedBy('snyk-test')
}

jacocoTestReport {
    dependsOn test
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri('https://oss.sonatype.org/service/local/')
            snapshotRepositoryUrl = uri('https://oss.sonatype.org/content/repositories/snapshots/')
            stagingProfileId = "1394775ce780ca"
        }
    }
}

dependencies {
    api 'org.slf4j:slf4j-api:2.0.5'

    testImplementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    testImplementation 'org.mockito:mockito-core:4.8.0'
}

test {
    useJUnitPlatform()
}

closeAndReleaseSonatypeStagingRepository.dependsOn('publishToSonatype')